//
//  IDPTagStyleKit.m
//  IDPTaggingParseServer
//
//  Created by Kaname Noto on 2016/11/29.
//  Copyright (c) 2016 Irimasu Densan Planning. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "IDPTagStyleKit.h"


@implementation IDPTagStyleKit

#pragma mark Cache

static UIImage* _imageOfTagInformation = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawTagInformation
{

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1, 1, 16, 16)];
    [UIColor.whiteColor setStroke];
    oval2Path.lineWidth = 1;
    [oval2Path stroke];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(9, 6.5)];
    [bezierPath addCurveToPoint: CGPointMake(9, 13.5) controlPoint1: CGPointMake(9, 13.5) controlPoint2: CGPointMake(9, 13.5)];
    [bezierPath addLineToPoint: CGPointMake(9, 13.5)];
    bezierPath.lineCapStyle = kCGLineCapRound;

    [UIColor.whiteColor setStroke];
    bezierPath.lineWidth = 1;
    [bezierPath stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(8.5, 4, 1, 1)];
    [UIColor.whiteColor setFill];
    [ovalPath fill];
}

+ (void)drawHeaderBackGroundWithFrame: (CGRect)frame
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame) + 0.5)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) + 0.5)];
    [UIColor.lightGrayColor setStroke];
    bezierPath.lineWidth = 0.5;
    [bezierPath stroke];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame) + 30.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMaxX(frame), CGRectGetMaxY(frame))];
    [UIColor.lightGrayColor setStroke];
    bezier2Path.lineWidth = 0.5;
    [bezier2Path stroke];
}

+ (void)drawCheckColor
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(3.5, 11.14)];
    [bezierPath addLineToPoint: CGPointMake(11.72, 19.5)];
    [bezierPath addLineToPoint: CGPointMake(24.5, 6.5)];
    [bezierPath addLineToPoint: CGPointMake(24.5, 6.5)];
    bezierPath.lineCapStyle = kCGLineCapRound;

    bezierPath.lineJoinStyle = kCGLineJoinRound;

    [UIColor.darkGrayColor setStroke];
    bezierPath.lineWidth = 1;
    [bezierPath stroke];
}

#pragma mark Generated Images

+ (UIImage*)imageOfTagInformation
{
    if (_imageOfTagInformation)
        return _imageOfTagInformation;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(18, 18), NO, 0.0f);
    [IDPTagStyleKit drawTagInformation];

    _imageOfTagInformation = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTagInformation;
}

#pragma mark Customization Infrastructure

- (void)setTagInformationTargets: (NSArray*)tagInformationTargets
{
    _tagInformationTargets = tagInformationTargets;

    for (id target in self.tagInformationTargets)
        [target performSelector: @selector(setImage:) withObject: IDPTagStyleKit.imageOfTagInformation];
}


@end
